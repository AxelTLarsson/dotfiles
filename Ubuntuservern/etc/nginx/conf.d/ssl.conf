# Created by Axel March 12, 2016
# Most recommendations from Mozilla SSL Configuration Generator (https://mozilla.github.io/server-side-tls/ssl-config-generator/)
# For easier ssl-enabling of vhosts I add common configuration
# options in http context here.

ssl_certificate /etc/letsencrypt/live/axellarsson.nu/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/axellarsson.nu/privkey.pem;


# modern configuration. tweak to your needs.
ssl_protocols TLSv1.2;
ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
ssl_prefer_server_ciphers on;

ssl_session_timeout 1d;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;

# prevents exact version in response headers
server_tokens       off;

# logjam and a good idea anyway, generate with "openssl dhparam -out dhparams.pem 2048"
ssl_dhparam /etc/nginx/dhparams.pem;

# HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
add_header Strict-Transport-Security max-age=15768000;

# OCSP Stapling ---
# fetch OCSP records from URL in ssl_certificate and cache them
ssl_stapling on;
ssl_stapling_verify on;

## verify chain of trust of OCSP response using Root CA and Intermediate certs
ssl_trusted_certificate /etc/letsencrypt/live/axellarsson.nu/fullchain.pem;


